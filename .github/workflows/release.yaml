name: release

on:
  push:
    tags:
      - '*'

jobs:
  
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ github.ref }}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

  release_darwin_x86:
    name: build_darwin_x86
    needs: create_release
    # https://github.com/actions/runner-images?tab=readme-ov-file#available-images
    # https://github.com/actions/runner-images/issues/9741
    runs-on: macos-13
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'
      - name: build
        run: make build-darwin zip-darwin
      - name: upload darwin artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./whisper-ui-macos-x86_64.zip
          asset_name: whisper-ui-macos-x86_64.zip
          asset_content_type: application/gzip

  release_darwin_arm64:
    name: build_darwin_arm64
    needs: create_release
    runs-on: macos-14
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'
      - name: build
        run: make build-darwin zip-darwin
      - name: upload darwin artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./whisper-ui-macos-arm64.zip
          asset_name: whisper-ui-macos-arm64.zip
          asset_content_type: application/gzip

  release_ubuntu_amd64:
    name: build_ubuntu_amd64
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'
      - name: install fyne dependencies
        run: sudo apt-get install -y libgl1-mesa-dev xorg-dev
      - name: build and zip
        run: make build zip-linux
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./whisper-ui-ubuntu-amd64.tar.gz
          asset_name: whisper-ui-ubuntu-amd64.tar.gz
          asset_content_type: application/gzip

  release_windows_64:
    name: build_windows_64
    needs: create_release
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2     
        with:
          msbuild-architecture: x64 
      - name: Build whisper-cpp
        run: |
          git clone https://github.com/ggerganov/whisper.cpp.git
          cd whisper.cpp
          cmake -S . -B ./build
          cd build 
          msbuild ALL_BUILD.vcxproj -t:build -p:configuration=Release -p:platform=x64
      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'          
      - name: Build whisper-ui, download ffmpeg
        run: make ffmpeg-windows build
      - name: Create zip
        run: make zip-windows
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./whisper-ui-windows64.zip
          asset_name: whisper-ui-windows64.zip
          asset_content_type: application/gzip
